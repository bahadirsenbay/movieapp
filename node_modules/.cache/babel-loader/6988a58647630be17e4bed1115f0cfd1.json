{"ast":null,"code":"var _jsxFileName = \"/home/bahadir/Masa\\xFCst\\xFC/Derslerim/trying-app/src/components/InMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { singleMovie } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InMovie = props => {\n  _s();\n\n  const movieID = props.match.params.id;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(singleMovie(movieID));\n  }, []);\n  const getSingle = useSelector(state => state.singleMovie);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"This is inMovie Component...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InMovie, \"x8dBpFJVKTz/wwN428viNcYjcM8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = InMovie;\nexport default InMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"InMovie\");","map":{"version":3,"sources":["/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/InMovie.js"],"names":["React","useEffect","useDispatch","useSelector","singleMovie","InMovie","props","movieID","match","params","id","dispatch","getSingle","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,YAA5B;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAEvB,QAAMC,OAAO,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAAnC;AAEA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,QAAQ,CAACP,WAAW,CAACG,OAAD,CAAZ,CAAR;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA,QAAMK,SAAS,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACT,WAAlB,CAA7B;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjBD;;GAAMC,O;UAIeH,W,EAMCC,W;;;KAVhBE,O;AAmBN,eAAeA,OAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { singleMovie } from '../actions'\n\nconst InMovie = (props) => {\n\n    const movieID = props.match.params.id\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(singleMovie(movieID))\n    },[])\n\n    const getSingle = useSelector((state) => state.singleMovie)\n    \n    return (\n        <div>\n            This is inMovie Component...\n        </div>\n    )\n}\n\nexport default InMovie;"]},"metadata":{},"sourceType":"module"}