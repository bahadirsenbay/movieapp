{"ast":null,"code":"var _jsxFileName = \"/home/bahadir/Masa\\xFCst\\xFC/Derslerim/trying-app/src/components/inMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { singleMovie } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst inMovie = props => {\n  _s();\n\n  console.log(props.match.params.id);\n  const getSingle = useSelector(state => state.singleMovie);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch = singleMovie();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"This is inMovie Component...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(inMovie, \"/fl6jOnwVAhCehUgAIAoLfi2Gas=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nexport default inMovie;","map":{"version":3,"sources":["/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/inMovie.js"],"names":["React","useEffect","useDispatch","useSelector","singleMovie","inMovie","props","console","log","match","params","id","getSingle","state","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,YAA5B;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAA/B;AAEA,QAAMC,SAAS,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACT,WAAlB,CAA7B;AACA,QAAMU,QAAQ,GAAGZ,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,QAAQ,GAAIV,WAAW,EAAvB;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAfD;;GAAMC,O;UAGgBF,W,EACDD,W;;;AAarB,eAAeG,OAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { singleMovie } from '../actions'\n\nconst inMovie = (props) => {\n    console.log(props.match.params.id)\n\n    const getSingle = useSelector((state) => state.singleMovie)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch = (singleMovie())\n    },[])\n\n    return (\n        <div>\n            This is inMovie Component...\n        </div>\n    )\n}\n\nexport default inMovie;"]},"metadata":{},"sourceType":"module"}