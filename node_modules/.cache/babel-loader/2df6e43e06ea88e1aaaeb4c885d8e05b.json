{"ast":null,"code":"var _jsxFileName = \"/home/bahadir/Masa\\xFCst\\xFC/Derslerim/trying-app/src/components/MovieList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport NavBar from './NavBar';\nimport { Link } from 'react-router-dom';\nimport '../css/NavBar.css';\nimport { getAPI, getTV } from '../actions';\nimport Pagenation from './Pagenation';\nimport { Grid } from '@material-ui/core';\nimport BottomNav from './BottomNav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieList = props => {\n  _s();\n\n  var _movies$results;\n\n  const dispatch = useDispatch();\n  const passedMovieUrl = props.match.url;\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    dispatch(getAPI());\n  }, []);\n  const movies = useSelector(state => state.movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: isMobile ? {\n      marginBottom: 70\n    } : null,\n    children: [!isMobile && /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PopFilmText\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: isMobile ? {\n            display: \"flex\",\n            justifyContent: \"center\",\n            padding: \"10px 0 0 0\"\n          } : null,\n          children: \"Pop\\xFCler Filmler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieBody\",\n        children: movies === null || movies === void 0 ? void 0 : (_movies$results = movies.results) === null || _movies$results === void 0 ? void 0 : _movies$results.map(movie => {\n          var _movie$original_title;\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movieCard\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: 50,\n                width: 50,\n                border: \"1px solid #000\",\n                borderRadius: \"50%\",\n                backgroundColor: \"red\",\n                position: \"absolute\",\n                zIndex: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/movie/${movie === null || movie === void 0 ? void 0 : movie.id}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"picAndProgres\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cardPic\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `https://www.themoviedb.org/t/p/w1280/${movie === null || movie === void 0 ? void 0 : movie.poster_path}`,\n                    height: \"100%\",\n                    width: \"100%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 54\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cardProgress\",\n                  children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n                    value: movie === null || movie === void 0 ? void 0 : movie.vote_average,\n                    maxValue: \"10\",\n                    text: `${movie === null || movie === void 0 ? void 0 : movie.vote_average}%`,\n                    background: true,\n                    backgroundPadding: 6,\n                    styles: buildStyles({\n                      textSize: \"25\",\n                      backgroundColor: \"#081c22\",\n                      textColor: \"#fff\",\n                      pathColor: \"#21d07a\",\n                      trailColor: \"transparent\"\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cardInText\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: movie === null || movie === void 0 ? void 0 : (_movie$original_title = movie.original_title) === null || _movie$original_title === void 0 ? void 0 : _movie$original_title.substr(0, 50)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: movie === null || movie === void 0 ? void 0 : movie.release_date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Pagenation, {\n        passedUrl: passedMovieUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), isMobile && /*#__PURE__*/_jsxDEV(BottomNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieList, \"D6H44mdvSYSJivYPZJzqwEbj1do=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/MovieList.js"],"names":["React","useEffect","isMobile","useDispatch","useSelector","CircularProgressbar","buildStyles","NavBar","Link","getAPI","getTV","Pagenation","Grid","BottomNav","MovieList","props","dispatch","passedMovieUrl","match","url","window","scrollTo","movies","state","marginBottom","display","justifyContent","padding","results","map","movie","height","width","border","borderRadius","backgroundColor","position","zIndex","id","poster_path","vote_average","textSize","textColor","pathColor","trailColor","original_title","substr","release_date"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CircularProgressbar, buildStyles, } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport NavBar from './NavBar'\nimport { Link } from 'react-router-dom'\nimport '../css/NavBar.css'\nimport { getAPI, getTV } from '../actions';\nimport Pagenation from './Pagenation';\nimport { Grid } from '@material-ui/core';\nimport BottomNav from './BottomNav';\n\nconst MovieList = (props) => {\n    const dispatch = useDispatch()\n    const passedMovieUrl = props.match.url;\n\n    useEffect(() => {\n            window.scrollTo(0, 0)\n            dispatch(getAPI())\n    }, [])\n\n\n    const movies = useSelector((state) => state.movies)\n    return (\n        <div style={ isMobile ? {marginBottom:70} : null}>\n            { !isMobile && <NavBar/> }\n            \n            <div>\n                <div className=\"PopFilmText\"><h1 style={ isMobile ? {display:\"flex\", justifyContent:\"center\", padding:\"10px 0 0 0\"} : null}>Popüler Filmler</h1></div>\n                   <div className=\"movieBody\">            \n            {\n                movies?.results?.map((movie) => {\n                    return (\n                        <div className=\"movieCard\" >\n                            <div style={{height:50,width:50, border:\"1px solid #000\", borderRadius:\"50%\", backgroundColor:\"red\", position:\"absolute\", zIndex:1}}></div>\n                            <Link to={`/movie/${movie?.id}`}>\n                            <div className=\"picAndProgres\">\n                            <div className=\"cardPic\"><img src={`https://www.themoviedb.org/t/p/w1280/${movie?.poster_path}`} height=\"100%\" width=\"100%\"/></div>\n                            <div className=\"cardProgress\">\n                            <CircularProgressbar\n                                value={movie?.vote_average}\n                                maxValue=\"10\"\n                                text={`${movie?.vote_average}%`}\n                                background\n                                backgroundPadding={6}\n                                styles={buildStyles({\n                                    textSize:\"25\",\n                                    backgroundColor: \"#081c22\",\n                                    textColor: \"#fff\",\n                                    pathColor: \"#21d07a\",\n                                    trailColor: \"transparent\"\n                                })}\n                            />\n                            </div>\n                            </div>\n                            <div className=\"cardInText\">\n                                <h3>{movie?.original_title?.substr(0,50)}</h3>\n                                <p>{movie?.release_date}</p>\n                            </div>\n                            </Link>\n                        </div>\n                    )\n                })\n            }\n        </div>\n        </div>\n        <Grid\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n               <Pagenation passedUrl={passedMovieUrl}/> \n            </Grid>\n        \n            { isMobile && <BottomNav/>}\n        </div>\n\n    )\n}\n\nexport default MovieList;"]},"metadata":{},"sourceType":"module"}