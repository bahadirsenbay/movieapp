{"ast":null,"code":"var _jsxFileName = \"/home/bahadir/Masa\\xFCst\\xFC/Derslerim/trying-app/src/components/InMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { singleMovie, leadActor } from '../actions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InterMenu from './InterMenu';\nimport '../css/NavBar.css';\nimport LeadActor from './LeadActor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InMovie = props => {\n  _s();\n\n  const movieID = props.match.params.id;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(singleMovie(movieID));\n    dispatch(leadActor(movieID));\n  }, []);\n  const getSingle = useSelector(state => state.singleMovie);\n  const getLeadActor = useSelector(state => state.leadActor);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(InterMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainInMovieBody\",\n      style: {\n        backgroundImage: `url(https://www.themoviedb.org/t/p/w1280${getSingle === null || getSingle === void 0 ? void 0 : getSingle.backdrop_path})`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inMovieBody\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"posterPath\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://www.themoviedb.org/t/p/w1280/${getSingle === null || getSingle === void 0 ? void 0 : getSingle.poster_path}`,\n            height: \"100%\",\n            width: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movieDescription\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movieTitle\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"titleAndDate\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: getSingle === null || getSingle === void 0 ? void 0 : getSingle.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 83\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"(\", getSingle === null || getSingle === void 0 ? void 0 : getSingle.release_date.substr(0, 4), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 110\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dateAndGenres\",\n              children: getSingle === null || getSingle === void 0 ? void 0 : getSingle.genres.map(gen => {\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    marginRight: \"7px\"\n                  },\n                  children: [gen.name, \",\"]\n                }, gen.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 33\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movieScore\",\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              variant: \"determinate\",\n              value: 67.7\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"moviePoint\",\n              children: getSingle === null || getSingle === void 0 ? void 0 : getSingle.vote_average\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), \"\\xDCye \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), \" Puanlar\\u0131\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movieSummary\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\xD6zet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: getSingle === null || getSingle === void 0 ? void 0 : getSingle.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movieAuthors\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"author\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Chris Columbus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Director\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"author\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Chris Columbus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Director\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"author\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Chris Columbus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Director\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actorContainer\",\n      children: getLeadActor === null || getLeadActor === void 0 ? void 0 : getLeadActor.map(actor => {\n        return /*#__PURE__*/_jsxDEV(LeadActor, {\n          name: actor.name,\n          photo: actor.profile_path,\n          role: actor.character\n        }, actor.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InMovie, \"gjvJXpPEPIGFY/+DA3Yh3OojqPA=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = InMovie;\nexport default InMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"InMovie\");","map":{"version":3,"sources":["/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/InMovie.js"],"names":["React","useEffect","useDispatch","useSelector","singleMovie","leadActor","CircularProgress","InterMenu","LeadActor","InMovie","props","movieID","match","params","id","dispatch","getSingle","state","getLeadActor","backgroundImage","backdrop_path","poster_path","title","release_date","substr","genres","map","gen","marginRight","name","vote_average","overview","actor","profile_path","character"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { singleMovie, leadActor } from '../actions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InterMenu from './InterMenu';\nimport '../css/NavBar.css';\nimport LeadActor from './LeadActor';\n\nconst InMovie = (props) => {\n\n    const movieID = props.match.params.id\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(singleMovie(movieID))\n        dispatch(leadActor(movieID))\n    },[])\n\n    const getSingle = useSelector((state) => state.singleMovie)\n    const getLeadActor = useSelector((state) => state.leadActor)\n    return (\n        <div>\n            <InterMenu/>\n            <div>\n            </div>          \n            <div className=\"mainInMovieBody\" style={{ backgroundImage: `url(https://www.themoviedb.org/t/p/w1280${getSingle?.backdrop_path})`}}>            \n                <div className=\"inMovieBody\">\n                    <div className=\"posterPath\"><img src={`https://www.themoviedb.org/t/p/w1280/${getSingle?.poster_path}`} height=\"100%\" width=\"100%\"/></div>\n                    <div className=\"movieDescription\">\n                        <div className=\"movieTitle\"><div className=\"titleAndDate\"><h2>{getSingle?.title}</h2><p>({getSingle?.release_date.substr(0,4)})</p></div>\n                        <div className=\"dateAndGenres\">\n                             {getSingle?.genres.map((gen) => {\n                            return(\n                                <span style={{marginRight: \"7px\"}} key={gen.id}>{gen.name},</span>\n                            )\n                        })}\n                        \n\n                        </div>\n                        </div>\n                        <div className=\"movieScore\">\n                        <CircularProgress variant=\"determinate\" value={67.7} />\n\n                            <div className=\"moviePoint\">{getSingle?.vote_average}</div>\n                            Üye <br/> Puanları\n\n                            </div>\n                        <div className=\"movieSummary\">\n                            <h3>Özet</h3>\n                            <p>{getSingle?.overview}</p>\n                        </div>\n                        <div className=\"movieAuthors\">\n                            <div className=\"author\">\n                                <p>Chris Columbus</p>\n                                <p>Director</p>\n                            </div>\n                            <div className=\"author\">\n                                <p>Chris Columbus</p>\n                                <p>Director</p>\n                            </div>\n                            <div className=\"author\">\n                                <p>Chris Columbus</p>\n                                <p>Director</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            \n            </div>\n            <div className=\"actorContainer\">\n            {\n                getLeadActor?.map((actor) => {\n                    return(\n                        <LeadActor key={actor.id} name={actor.name} photo={actor.profile_path} role={actor.character}/>\n                    )\n                })\n            }\n            </div>\n        </div>\n    )\n}\n\nexport default InMovie;"]},"metadata":{},"sourceType":"module"}