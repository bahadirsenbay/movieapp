{"ast":null,"code":"var _jsxFileName = \"/home/bahadir/Masa\\xFCst\\xFC/Derslerim/trying-app/src/components/MovieList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport NavBar from './NavBar';\nimport { Link } from 'react-router-dom';\nimport '../css/NavBar.css';\nimport { getAPI, getTV } from '../actions';\nimport Pagenation from './Pagenation';\nimport { Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieList = props => {\n  _s();\n\n  var _movies$results;\n\n  const dispatch = useDispatch();\n  const passedMovieUrl = props.match.url;\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    dispatch(getAPI());\n  }, []);\n  const movies = useSelector(state => state.movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieBody\",\n      children: movies === null || movies === void 0 ? void 0 : (_movies$results = movies.results) === null || _movies$results === void 0 ? void 0 : _movies$results.map(movie => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movieCard\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/movie/${movie === null || movie === void 0 ? void 0 : movie.id}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"picAndProgres\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cardPic\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `https://www.themoviedb.org/t/p/w1280/${movie === null || movie === void 0 ? void 0 : movie.poster_path}`,\n                  height: \"100%\",\n                  width: \"100%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 54\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cardProgress\",\n                children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n                  value: movie === null || movie === void 0 ? void 0 : movie.vote_average,\n                  maxValue: \"10\",\n                  text: `${movie === null || movie === void 0 ? void 0 : movie.vote_average}%`,\n                  background: true,\n                  backgroundPadding: 6,\n                  styles: buildStyles({\n                    textSize: \"25\",\n                    backgroundColor: \"#081c22\",\n                    textColor: \"#fff\",\n                    pathColor: \"#21d07a\",\n                    trailColor: \"transparent\"\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cardInText\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: movie === null || movie === void 0 ? void 0 : movie.original_title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: movie === null || movie === void 0 ? void 0 : movie.release_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Pagenation, {\n        passedUrl: passedMovieUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieList, \"D6H44mdvSYSJivYPZJzqwEbj1do=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["/home/bahadir/MasaÃ¼stÃ¼/Derslerim/trying-app/src/components/MovieList.js"],"names":["React","useEffect","useDispatch","useSelector","CircularProgressbar","buildStyles","NavBar","Link","getAPI","getTV","Pagenation","Grid","MovieList","props","dispatch","passedMovieUrl","match","url","window","scrollTo","movies","state","results","map","movie","id","poster_path","vote_average","textSize","backgroundColor","textColor","pathColor","trailColor","original_title","release_date"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CircularProgressbar, buildStyles, } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport NavBar from './NavBar'\nimport { Link } from 'react-router-dom'\nimport '../css/NavBar.css'\nimport { getAPI, getTV } from '../actions';\nimport Pagenation from './Pagenation';\nimport { Grid } from '@material-ui/core';\n\nconst MovieList = (props) => {\n    const dispatch = useDispatch()\n    const passedMovieUrl = props.match.url;\n\n    useEffect(() => {\n            window.scrollTo(0, 0)\n            dispatch(getAPI())\n    }, [])\n\n\n    const movies = useSelector((state) => state.movies)\n    return (\n        <div>\n            <NavBar/>\n                   <div className=\"movieBody\">             \n            {\n                movies?.results?.map((movie) => {\n                    return (\n                        <div className=\"movieCard\">\n                            <Link to={`/movie/${movie?.id}`}>\n                            <div className=\"picAndProgres\">\n                            <div className=\"cardPic\"><img src={`https://www.themoviedb.org/t/p/w1280/${movie?.poster_path}`} height=\"100%\" width=\"100%\"/></div>\n                            <div className=\"cardProgress\">\n                            <CircularProgressbar\n                                value={movie?.vote_average}\n                                maxValue=\"10\"\n                                text={`${movie?.vote_average}%`}\n                                background\n                                backgroundPadding={6}\n                                styles={buildStyles({\n                                    textSize:\"25\",\n                                    backgroundColor: \"#081c22\",\n                                    textColor: \"#fff\",\n                                    pathColor: \"#21d07a\",\n                                    trailColor: \"transparent\"\n                                })}\n                            />\n                            </div>\n                            </div>\n                            <div className=\"cardInText\">\n                                <h3>{movie?.original_title}</h3>\n                                <p>{movie?.release_date}</p>\n                            </div>\n                            </Link>\n                        </div>\n                    )\n                })\n            }\n        </div>\n        <Grid\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n               <Pagenation passedUrl={passedMovieUrl}/> \n            </Grid>\n        \n\n        </div>\n\n    )\n}\n\nexport default MovieList;"]},"metadata":{},"sourceType":"module"}