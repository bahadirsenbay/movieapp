{"ast":null,"code":"var _jsxFileName = \"/home/bahadir/Masa\\xFCst\\xFC/Derslerim/trying-app/src/components/PopularTabs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Tabs, Tab, Box, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport '../css/NavBar.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAPI, getTV } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopularTabs = () => {\n  _s();\n\n  var _movies$results, _series$results;\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.paper,\n      marginTop: \"20px\",\n      marginLeft: \"20px\"\n    },\n    tab: {\n      marginBottom: \"20px\"\n    }\n  }));\n  const classes = useStyles();\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  function TabPanel(props) {\n    const {\n      children,\n      value,\n      index,\n      ...other\n    } = props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      role: \"tabpanel\",\n      hidden: value !== index,\n      id: `simple-tabpanel-${index}`,\n      \"aria-labelledby\": `simple-tab-${index}`,\n      ...other,\n      children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n  const dispatch = useDispatch();\n  const {\n    movies,\n    series\n  } = useSelector(state => state);\n  useEffect(() => {\n    dispatch(getAPI());\n    dispatch(getTV());\n  }, []);\n\n  const handleChange = (event, newValue) => {\n    setSelectedTab(newValue);\n\n    if (selectedTab === 0) {\n      dispatch(getAPI());\n    }\n\n    if (selectedTab === 1) {\n      dispatch(getTV());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tableBodyStyle\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Pop\\xFCler Olanlar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          className: classes.tab,\n          value: selectedTab,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Televizyonda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Kiral\\u0131k\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Sinemalarda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: selectedTab,\n      index: 0,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardTabBody\",\n        children: movies === null || movies === void 0 ? void 0 : (_movies$results = movies.results) === null || _movies$results === void 0 ? void 0 : _movies$results.map(movie => {\n          var _movie$original_title;\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tabBody\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tabPictures\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://www.themoviedb.org/t/p/w1280/${movie === null || movie === void 0 ? void 0 : movie.poster_path}`,\n                height: \"100%\",\n                width: \"100%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tabTextBody\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: movie === null || movie === void 0 ? void 0 : (_movie$original_title = movie.original_title) === null || _movie$original_title === void 0 ? void 0 : _movie$original_title.substr(0, 13)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: movie === null || movie === void 0 ? void 0 : movie.release_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this)]\n          }, movie === null || movie === void 0 ? void 0 : movie.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: selectedTab,\n      index: 1,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardTabBody\",\n        children: series === null || series === void 0 ? void 0 : (_series$results = series.results) === null || _series$results === void 0 ? void 0 : _series$results.map(movie => {\n          var _movie$original_name;\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tabBody\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tabPictures\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://www.themoviedb.org/t/p/w1280/${movie === null || movie === void 0 ? void 0 : movie.poster_path}`,\n                height: \"100%\",\n                width: \"100%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tabTextBody\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: movie === null || movie === void 0 ? void 0 : (_movie$original_name = movie.original_name) === null || _movie$original_name === void 0 ? void 0 : _movie$original_name.substr(0, 13)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: movie === null || movie === void 0 ? void 0 : movie.first_air_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this)]\n          }, movie.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: selectedTab,\n      index: 2,\n      children: \"Item Three\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PopularTabs, \"XoP1J4FSm1uTkAPFeLCdsXhy4yc=\", true, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PopularTabs;\nexport default PopularTabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopularTabs\");","map":{"version":3,"sources":["/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/PopularTabs.js"],"names":["React","useEffect","useState","Tabs","Tab","Box","Typography","makeStyles","useDispatch","useSelector","getAPI","getTV","PopularTabs","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","marginTop","marginLeft","tab","marginBottom","classes","selectedTab","setSelectedTab","TabPanel","props","children","value","index","other","dispatch","movies","series","state","handleChange","event","newValue","results","map","movie","poster_path","original_title","substr","release_date","id","original_name","first_air_date"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Tabs, Tab, Box, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport '../css/NavBar.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAPI, getTV } from '../actions';\n\nconst PopularTabs = () => {\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          flexGrow: 1,\n          backgroundColor: theme.palette.background.paper,\n            marginTop: \"20px\",\n            marginLeft: \"20px\"\n        },\n\n        tab: {\n            marginBottom: \"20px\"\n        }\n      }));\n\n    const classes = useStyles();\n    const [selectedTab, setSelectedTab] = useState(0);\n\n    function TabPanel(props) {\n        const { children, value, index, ...other } = props;\n\n        return (\n            <div\n                role=\"tabpanel\"\n                hidden={value !== index}\n                id={`simple-tabpanel-${index}`}\n                aria-labelledby={`simple-tab-${index}`}\n                {...other} \n            >\n                {value === index && (\n                    <Box>\n                        <Typography>{children}</Typography>\n                    </Box>\n                )}\n            </div>\n        );\n    }\n\n    const dispatch = useDispatch()\n\n    const {movies, series} = useSelector((state) => state)\n\n\n    useEffect(() => {\n        dispatch(getAPI())\n        dispatch(getTV())\n    }, [])\n\n\n    const handleChange = (event, newValue) => {\n        setSelectedTab(newValue);\n        if(selectedTab === 0) {\n            dispatch(getAPI())\n        }\n        if(selectedTab === 1) {\n            dispatch(getTV())\n\n        }\n    };\n\n    return (\n        <div className={classes.root}>\n            <div className=\"tableBodyStyle\">\n                <p>Popüler Olanlar</p>\n                <div>\n            <Tabs className={classes.tab} value={selectedTab} onChange={handleChange} >\n                <Tab label=\"Televizyonda\" />\n                <Tab label=\"Kiralık\" />\n                <Tab label=\"Sinemalarda\" />\n            </Tabs>\n            </div>\n            </div>\n            <TabPanel value={selectedTab} index={0}>\n                <div className=\"cardTabBody\">\n                    {\n                        movies?.results?.map((movie) => {\n                            return(\n                                <div className=\"tabBody\" key={movie?.id}>\n                                <div className=\"tabPictures\"><img src={`https://www.themoviedb.org/t/p/w1280/${movie?.poster_path}`} height=\"100%\" width=\"100%\"/></div>\n                                <div className=\"tabTextBody\">\n                                    <h3>{movie?.original_title?.substr(0,13)}</h3>\n                                    <p>{movie?.release_date}</p>\n                                </div>\n                            </div>\n                            )\n                        })\n                    }\n\n                </div>\n                \n            </TabPanel>\n            <TabPanel value={selectedTab} index={1}>\n            <div className=\"cardTabBody\">\n                    {\n                        series?.results?.map((movie) => {\n                            return(\n                                <div className=\"tabBody\" key={movie.id}>\n                                <div className=\"tabPictures\"><img src={`https://www.themoviedb.org/t/p/w1280/${movie?.poster_path}`} height=\"100%\" width=\"100%\"/></div>\n                                <div className=\"tabTextBody\">\n                                    <h3>{movie?.original_name?.substr(0,13)}</h3>\n                                    <p>{movie?.first_air_date}</p>\n                                </div>\n                            </div>\n                            )\n                        })\n                    }\n\n                </div>\n            </TabPanel>\n            <TabPanel value={selectedTab} index={2}>\n                Item Three\n            </TabPanel>\n        </div>\n    )\n}\n\n\nexport default PopularTabs;"]},"metadata":{},"sourceType":"module"}