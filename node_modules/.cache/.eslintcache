[{"/home/bahadir/Masaüstü/Derslerim/trying-app/src/index.js":"1","/home/bahadir/Masaüstü/Derslerim/trying-app/src/App.js":"2","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/MovieList.js":"3","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/NavBar.js":"4","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/Home.js":"5","/home/bahadir/Masaüstü/Derslerim/trying-app/src/reducers/rootReducer.js":"6","/home/bahadir/Masaüstü/Derslerim/trying-app/src/actions/index.js":"7","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/InMovie.js":"8","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/TVseries.js":"9","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/LeadActor.js":"10","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/Login.js":"11","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/Pagenation.js":"12","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/SearchInput.js":"13","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/PopularTabs.js":"14","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/Series.js":"15","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/SearchPage.js":"16","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/SearchInLeftComp.js":"17","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/InterMenu.js":"18","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/PeopleList.js":"19","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/InPerson.js":"20"},{"size":442,"mtime":1614291021231,"results":"21","hashOfConfig":"22"},{"size":1575,"mtime":1615409429822,"results":"23","hashOfConfig":"22"},{"size":2826,"mtime":1615418608022,"results":"24","hashOfConfig":"22"},{"size":2102,"mtime":1615490539701,"results":"25","hashOfConfig":"22"},{"size":754,"mtime":1615411047703,"results":"26","hashOfConfig":"22"},{"size":1914,"mtime":1615393295663,"results":"27","hashOfConfig":"22"},{"size":3070,"mtime":1615394864975,"results":"28","hashOfConfig":"22"},{"size":5336,"mtime":1615479725836,"results":"29","hashOfConfig":"22"},{"size":5282,"mtime":1615411690216,"results":"30","hashOfConfig":"22"},{"size":672,"mtime":1615397644089,"results":"31","hashOfConfig":"22"},{"size":3711,"mtime":1615496765978,"results":"32","hashOfConfig":"22"},{"size":868,"mtime":1615338891899,"results":"33","hashOfConfig":"22"},{"size":1846,"mtime":1615315820285,"results":"34","hashOfConfig":"22"},{"size":7059,"mtime":1615397554503,"results":"35","hashOfConfig":"22"},{"size":2722,"mtime":1615418867802,"results":"36","hashOfConfig":"22"},{"size":588,"mtime":1615409496631,"results":"37","hashOfConfig":"22"},{"size":7717,"mtime":1615420669526,"results":"38","hashOfConfig":"22"},{"size":344,"mtime":1615307777051,"results":"39","hashOfConfig":"22"},{"size":1877,"mtime":1615419167593,"results":"40","hashOfConfig":"22"},{"size":2811,"mtime":1615477936364,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1dy1vms",{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"44"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"44"},"/home/bahadir/Masaüstü/Derslerim/trying-app/src/index.js",[],["97","98"],"/home/bahadir/Masaüstü/Derslerim/trying-app/src/App.js",["99","100","101","102"],"import React from 'react';\nimport NavBar from './components/NavBar';\nimport Login from './components/Login'\nimport Home from './components/Home';\nimport MovieList from './components/MovieList';\nimport InMovie from './components/InMovie';\nimport TVseries from './components/TVseries';\nimport Series from './components/Series';\nimport SearchPage from './components/SearchPage';\nimport PeopleList from './components/PeopleList';\nimport InPerson from './components/InPerson';\nimport Cookie, { useCookies } from 'react-cookie';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nconst App = () => {\n\n    const [cookie, setCookie, removeCookie] = useCookies()\n    return (\n        <BrowserRouter>\n            {\n                !cookie.token ? <Login /> :\n                    <Switch>\n                        <div className=\"App\">\n\n                            <Route exact path='/' component={Home} />\n                            <Route path='/Movielist' component={MovieList} />\n                            <Route path='/TVshow' component={Series} />\n                            <Route path='/movie/:id' component={InMovie} />\n                            <Route path='/series/:id' component={TVseries} />\n                            <Route path='/person/:id' component={InPerson} />\n                            <Route path=\"/people\" component={PeopleList}/>\n                            <Route path='/search' component={SearchPage} />\n\n                        </div>\n                    </Switch>\n            }\n\n        </BrowserRouter>\n    );\n}\n\nexport default App; ","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/MovieList.js",["103","104","105"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CircularProgressbar, buildStyles, } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport NavBar from './NavBar'\nimport { Link } from 'react-router-dom'\nimport '../css/NavBar.css'\nimport { getAPI, getTV } from '../actions';\nimport Pagenation from './Pagenation';\nimport { Grid } from '@material-ui/core';\n\nconst MovieList = (props) => {\n    const dispatch = useDispatch()\n    const passedMovieUrl = props.match.url;\n\n    useEffect(() => {\n            window.scrollTo(0, 0)\n            dispatch(getAPI())\n    }, [])\n\n\n    const movies = useSelector((state) => state.movies)\n    return (\n        <div>\n            <NavBar/>\n            <div>\n                <div className=\"PopFilmText\"><h1>Popüler Filmler</h1></div>\n                   <div className=\"movieBody\">            \n            {\n                movies?.results?.map((movie) => {\n                    return (\n                        <div className=\"movieCard\">\n                            <Link to={`/movie/${movie?.id}`}>\n                            <div className=\"picAndProgres\">\n                            <div className=\"cardPic\"><img src={`https://www.themoviedb.org/t/p/w1280/${movie?.poster_path}`} height=\"100%\" width=\"100%\"/></div>\n                            <div className=\"cardProgress\">\n                            <CircularProgressbar\n                                value={movie?.vote_average}\n                                maxValue=\"10\"\n                                text={`${movie?.vote_average}%`}\n                                background\n                                backgroundPadding={6}\n                                styles={buildStyles({\n                                    textSize:\"25\",\n                                    backgroundColor: \"#081c22\",\n                                    textColor: \"#fff\",\n                                    pathColor: \"#21d07a\",\n                                    trailColor: \"transparent\"\n                                })}\n                            />\n                            </div>\n                            </div>\n                            <div className=\"cardInText\">\n                                <h3>{movie?.original_title}</h3>\n                                <p>{movie?.release_date}</p>\n                            </div>\n                            </Link>\n                        </div>\n                    )\n                })\n            }\n        </div>\n        </div>\n        <Grid\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n               <Pagenation passedUrl={passedMovieUrl}/> \n            </Grid>\n        \n\n        </div>\n\n    )\n}\n\nexport default MovieList;","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/NavBar.js",["106","107","108","109"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useCookies } from 'react-cookie'\nimport { Link } from 'react-router-dom';\nimport img from '../img/logo.png'\nimport '../css/NavBar.css';\nimport { AccountCircle } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        position:\"static\",\n        backgroundColor:\"#032541\"\n    },\n    \n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n\n    \n  }));\n\nconst NavBar = () => {\n\n    const classes = useStyles();\n    const [cookie, setCookie, removeCookie] = useCookies()\n\n    return (\n        <div>\n        <AppBar className={classes.root}>\n          <Toolbar>\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n              <Link to=\"/\"><img src={img} style={{ height: \"30px\", width: \"70px\" }}/></Link>\n            </IconButton>\n            <Typography style={{ flexGrow: 1 }}>\n            <Button color=\"inherit\"><Link to=\"/Movielist\" style={{textDecoration:\"none\", color:\"white\"}}>Filmler</Link></Button>\n            <Button color=\"inherit\"><Link to=\"/Tvshow\" style={{textDecoration:\"none\", color:\"white\"}}>Diziler</Link></Button>\n            <Button color=\"inherit\"><Link to=\"/People\" style={{textDecoration:\"none\", color:\"white\"}}>Kişiler</Link></Button>\n            </Typography>\n            <Button color=\"inherit\"><Link style={{textDecoration:\"none\", color:\"white\"}}>Giriş</Link></Button>\n            <Button onClick={() => removeCookie('token')} color=\"inherit\"><Link style={{textDecoration:\"none\", color:\"white\"}}>Çıkış</Link></Button>\n            <IconButton>\n                <AccountCircle/>\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n      </div>\n    )\n}\n\nexport default NavBar;","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/Home.js",[],"/home/bahadir/Masaüstü/Derslerim/trying-app/src/reducers/rootReducer.js",[],"/home/bahadir/Masaüstü/Derslerim/trying-app/src/actions/index.js",[],"/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/InMovie.js",["110","111"],"import React, { useEffect } from 'react';\nimport { CircularProgressbar, buildStyles, } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AlarmIcon from '@material-ui/icons/Alarm';\nimport NavBar from './NavBar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { singleMovie, leadActor } from '../actions';\nimport InterMenu from './InterMenu';\nimport '../css/NavBar.css';\nimport '../css/progress.css';\n\nimport LeadActor from './LeadActor';\n\n\nconst InMovie = (props) => {\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            marginLeft: \"30px\"\n        },\n        button: {\n            backgroundColor: \"#032541\",\n            marginRight: \"10px\",\n            color: \"#ffffff\"\n        }\n    }));\n\n    const movieID = props.match.params.id\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        dispatch(singleMovie(movieID))\n        dispatch(leadActor(movieID))\n    }, [])\n\n    const classes = useStyles();\n    const getSingle = useSelector((state) => state.singleMovie)\n    const getLeadActor = useSelector((state) => state.leadActor)\n    return (\n        <div>\n            <NavBar/>\n            <InterMenu />\n            <div className=\"mainInMovieBody\" style={{ backgroundImage: `url(https://www.themoviedb.org/t/p/w1280${getSingle?.backdrop_path})`, maxWidth:\"100%\", maxHeight:\"100%\"}}>\n                <div className=\"inMovieBody\">\n                    <div className=\"posterPath\"><img src={`https://www.themoviedb.org/t/p/w1280/${getSingle?.poster_path}`} /></div>\n                    <div className=\"movieDescription\">\n                        <div className=\"movieTitle\"><div className=\"titleAndDate\"><h2>{getSingle?.title}</h2><p>({getSingle?.release_date.substr(0, 4)})</p></div>\n                            <div className=\"dateAndGenres\">\n                                {getSingle?.genres.map((gen) => {\n                                    return (\n                                        <span style={{ marginRight: \"7px\" }} key={gen.id}>{gen.name},</span>\n                                    )\n                                })}\n\n\n                            </div>\n                        </div>\n                        <div className=\"movieScore\">\n                            <div className=\"moviePoint\"><CircularProgressbar\n                                value={getSingle?.vote_average}\n                                maxValue=\"10\"\n                                text={`${getSingle?.vote_average}%`}\n                                background\n                                backgroundPadding={6}\n                                styles={buildStyles({\n                                    backgroundColor: \"#081c22\",\n                                    textColor: \"#fff\",\n                                    pathColor: \"#21d07a\",\n                                    trailColor: \"transparent\"\n                                })}\n                            />\n                            </div>\n                            <p>Üye <br /> Puanları</p>\n                            <div className={classes.root}>\n                                <IconButton className={classes.button} color=\"primary\" aria-label=\"add an alarm\">\n                                    <AlarmIcon />\n                                </IconButton>\n                                <IconButton className={classes.button} color=\"primary\" aria-label=\"add an alarm\">\n                                    <AlarmIcon />\n                                </IconButton>\n                                <IconButton className={classes.button} color=\"primary\" aria-label=\"add an alarm\">\n                                    <DeleteIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className=\"movieSummary\">\n                            <h3>Özet</h3>\n                            <p>{getSingle?.overview}</p>\n                        </div>\n                        <div className=\"movieAuthors\">\n                            <div className=\"author\">\n                                <p>Chris Columbus</p>\n                                <p>Director</p>\n                            </div>\n                            <div className=\"author\">\n                                <p>Chris Columbus</p>\n                                <p>Director</p>\n                            </div>\n                            <div className=\"author\">\n                                <p>Chris Columbus</p>\n                                <p>Director</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n            <div className=\"actorContainer\">\n                {\n                    getLeadActor?.map((actor) => {\n                        return (\n                            <LeadActor key={actor.id} name={actor.name} photo={actor.profile_path} role={actor.character} id={actor.id}/>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default InMovie;","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/TVseries.js",["112","113"],"import React, { useEffect } from 'react';\nimport { CircularProgressbar, buildStyles, } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AlarmIcon from '@material-ui/icons/Alarm';\nimport InterMenu from './InterMenu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { leadTvActor, singleTV } from '../actions';\nimport LeadActor from './LeadActor'\n\nimport '../css/NavBar.css'\nimport NavBar from './NavBar';\n\nconst TVseries = (props) => {\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            marginLeft: \"30px\"\n        },\n        button: {\n            backgroundColor: \"#032541\",\n            marginRight: \"10px\",\n            color: \"#ffffff\"\n        }\n    }));\n\n    const tvID = props.match.params.id\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        dispatch(singleTV(tvID))\n        dispatch(leadTvActor(tvID))\n    }, [])\n\n    const classes = useStyles();\n    const getTVseries = useSelector((state) => state.singleTV)\n    const getLeadTvActor = useSelector((state) => state.leadTvActor)\n\n    return (\n        <div>\n            <NavBar/>\n            <InterMenu />\n            <div className=\"mainInMovieBody\" style={{ backgroundImage: `url(https://www.themoviedb.org/t/p/w1280${getTVseries?.backdrop_path})` }}>\n                <div className=\"inMovieBody\">\n                    <div className=\"posterPath\"><img src={`https://www.themoviedb.org/t/p/w1280/${getTVseries?.poster_path}`} height=\"100%\" width=\"100%\" /></div>\n                    <div className=\"movieDescription\">\n                        <div className=\"movieTitle\"><div className=\"titleAndDate\"><h2>{getTVseries?.name}</h2><p>({getTVseries?.first_air_date?.substr(0, 4)})</p></div>\n                            <div className=\"dateAndGenres\">\n                                {getTVseries?.genres.map((gen) => {\n                                    return (\n                                        <span style={{ marginRight: \"7px\" }} key={gen.id}>{gen.name},</span>\n                                    )\n                                })}\n\n\n                            </div>\n                        </div>\n                        <div className=\"movieScore\">\n                            <div className=\"moviePoint\"><CircularProgressbar\n                                value={getTVseries?.vote_average}\n                                maxValue=\"10\"\n                                text={`${getTVseries?.vote_average}%`}\n                                background\n                                backgroundPadding={6}\n                                styles={buildStyles({\n                                    backgroundColor: \"#081c22\",\n                                    textColor: \"#fff\",\n                                    pathColor: \"#21d07a\",\n                                    trailColor: \"transparent\"\n                                })}\n                            />\n                            </div>\n                            <p>Üye <br /> Puanları</p>\n                            <div className={classes.root}>\n                                <IconButton className={classes.button} color=\"primary\" aria-label=\"add an alarm\">\n                                    <AlarmIcon />\n                                </IconButton>\n                                <IconButton className={classes.button} color=\"primary\" aria-label=\"add an alarm\">\n                                    <AlarmIcon />\n                                </IconButton>\n                                <IconButton className={classes.button} color=\"primary\" aria-label=\"add an alarm\">\n                                    <DeleteIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className=\"movieSummary\">\n                            <h3>Özet</h3>\n                            <p>{getTVseries?.overview}</p>\n                        </div>\n                        <div className=\"movieAuthors\">\n                            <div className=\"author\">\n                                <p>Chris Columbus</p>\n                                <p>Director</p>\n                            </div>\n                            <div className=\"author\">\n                                <p>Chris Columbus</p>\n                                <p>Director</p>\n                            </div>\n                            <div className=\"author\">\n                                <p>Chris Columbus</p>\n                                <p>Director</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n            <div className=\"actorContainer\">\n            {\n                getLeadTvActor?.map((actor) => {\n                    return(\n                        <LeadActor key={actor.id} name={actor.name} photo={actor.profile_path} role={actor.character} id={actor.id}/>\n                    )\n                })\n            }\n            </div>\n        </div>\n    )\n}\n\nexport default TVseries;","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/LeadActor.js",["114"],"import React from 'react';\nimport '../css/Reset.css'\nimport '../css/NavBar.css'\nimport { Link } from 'react-router-dom';\n\n\nconst LeadActor = ({name, photo, role, id}) => {\n    return(\n            <div className=\"actorBody\">\n                <Link to={`/person/${id}`} style={{textDecoration:\"none\", color:\"black\"}}>\n                <div className=\"actorPicture\"><img src={`https://www.themoviedb.org/t/p/w1280${photo}`} height=\"100%\" width=\"100%\"/></div>\n                <div className=\"actorBodyText\">\n                    <h2>{name}</h2>\n                    <p>{role}</p>\n                </div>\n                </Link>\n            </div>\n    )\n}\n\nexport default LeadActor;","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/Login.js",["115","116"],"/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/Pagenation.js",["117","118","119"],"import { Pagination } from '@material-ui/lab';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAPI, getPeople, getTV } from '../actions';\n\nconst Pagenation = (props) => {\n\n    const [page, setPage] = useState(1);\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getAPI())\n        dispatch(getTV())\n        dispatch(getPeople())\n    },[])\n\n    const handleChange = (event, value) => {\n        setPage(value);\n        dispatch(getAPI(value))\n        dispatch(getTV(value))\n        dispatch(getPeople(value))\n      };\n\n    const {movies, series, people} = useSelector((state) => state)\n\n    return (\n        <div>\n          <Pagination count={movies.total_pages} page={page} onChange={handleChange} color=\"secondary\" />  \n        </div>\n    )\n}\n\nexport default Pagenation;","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/SearchInput.js",[],"/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/PopularTabs.js",["120","121","122"],"import React, { useEffect, useState } from 'react';\nimport { Tabs, Tab, Box, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CircularProgressbar, buildStyles, } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport '../css/NavBar.css';\nimport '../css/progress.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAPI, getTV } from '../actions';\nimport { Link } from 'react-router-dom';\n\nconst PopularTabs = () => {\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            flexGrow: 1,\n            backgroundColor: theme.palette.background.paper,\n            marginTop: \"20px\",\n            marginLeft: \"20px\",\n\n        },\n\n        tab: {\n            marginBottom: \"20px\",\n        },\n\n        tabPanelCss: {\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        },\n\n    }));\n\n    const classes = useStyles();\n    const [selectedTab, setSelectedTab] = useState(0);\n\n    function TabPanel(props) {\n        const { children, value, index, ...other } = props;\n\n        return (\n            <div\n                role=\"tabpanel\"\n                hidden={value !== index}\n                id={`simple-tabpanel-${index}`}\n                aria-labelledby={`simple-tab-${index}`}\n                {...other}\n            >\n                {value === index && (\n                    <Box>\n                        <Typography>{children}</Typography>\n                    </Box>\n                )}\n            </div>\n        );\n    }\n\n    const dispatch = useDispatch()\n\n    const { movies, series } = useSelector((state) => state)\n\n\n    useEffect(() => {\n        dispatch(getAPI())\n        dispatch(getTV())\n    }, [])\n\n\n    const handleChange = (event, newValue) => {\n        setSelectedTab(newValue);\n        if (selectedTab === 0) {\n            dispatch(getAPI())\n        }\n        if (selectedTab === 1) {\n            dispatch(getTV())\n\n        }\n    };\n\n    return (\n        <div className={classes.root}>\n            <div className=\"tableBodyStyle\">\n                <p>Popüler Olanlar</p>\n                <div>\n                    <Tabs className={classes.tab} value={selectedTab} onChange={handleChange} >\n                        <Tab label=\"Televizyonda\" />\n                        <Tab label=\"Kiralık\" />\n                        <Tab label=\"Sinemalarda\" />\n                    </Tabs>\n                </div>\n            </div>\n            <TabPanel value={selectedTab} index={0}>\n                <div className=\"cardTabBody\">\n                    {\n                        movies?.results?.map((movie) => {\n                            return (\n                                <div className=\"tabBody\" key={movie?.id}>\n                                    <Link to={`/movie/${movie?.id}`} style={{textDecoration:\"none\", color:\"black\"}}>\n                                    <div className=\"pictureAndProgress\">\n                                        <div className=\"tabPictures\"><img src={`https://www.themoviedb.org/t/p/w1280/${movie?.poster_path}`} height=\"100%\" width=\"100%\" /></div>\n                                        <div className=\"progressRegion\">\n                                            <CircularProgressbar\n                                                value={movie?.vote_average}\n                                                maxValue=\"10\"\n                                                text={`${movie?.vote_average}`}\n                                                background\n                                                backgroundPadding={6}\n                                                styles={buildStyles({\n                                                    backgroundColor: \"#081c22\",\n                                                    textSize:\"27\",\n                                                    textColor: \"#fff\",\n                                                    pathColor: \"#21d07a\",\n                                                    trailColor: \"transparent\"\n                                                })}\n                                            />\n                                        </div>\n                                    </div>\n                                    </Link>\n                                    <div className=\"tabTextBody\">\n                                        <h3>{movie?.original_title}</h3>\n                                        <p>{movie?.release_date}</p>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n\n                </div>\n\n            </TabPanel>\n            <TabPanel value={selectedTab} index={1}>\n                <div className=\"cardTabBody\">\n                    {\n                        series?.results?.map((movie) => {\n                            return (\n                                <div className=\"tabBody\" key={movie?.id}>\n                                    <Link to={`/series/${movie.id}`}>\n                                    <div className=\"pictureAndProgress\">\n                                        <div className=\"tabPictures\"><img src={`https://www.themoviedb.org/t/p/w1280/${movie?.poster_path}`} height=\"100%\" width=\"100%\" /></div>\n                                        <div className=\"progressRegion\">\n                                            <CircularProgressbar\n                                                value={movie?.vote_average}\n                                                maxValue=\"10\"\n                                                text={`${movie?.vote_average}`}\n                                                background\n                                                backgroundPadding={6}\n                                                styles={buildStyles({\n                                                    backgroundColor: \"#081c22\",\n                                                    textSize:\"27\",\n                                                    textColor: \"#fff\",\n                                                    pathColor: \"#21d07a\",\n                                                    trailColor: \"transparent\"\n                                                })}\n                                            />\n                                        </div>\n                                    </div>\n                                    </Link>\n                                    <div className=\"tabTextBody\">\n                                        <h3>{movie?.original_name}</h3>\n                                        <p>{movie?.first_air_date}</p>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n\n                </div>\n            </TabPanel>\n            <TabPanel value={selectedTab} index={2}>\n                Item Three\n            </TabPanel>\n        </div>\n    )\n}\n\n\nexport default PopularTabs;","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/Series.js",["123","124","125"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CircularProgressbar, buildStyles, } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { Link } from 'react-router-dom'\nimport '../css/NavBar.css'\nimport { getAPI, getTV } from '../actions';\nimport Pagenation from './Pagenation';\nimport { Grid } from '@material-ui/core';\nimport NavBar from './NavBar';\n\nconst Series = (props) => {\n    const dispatch = useDispatch()\n    const passedSeriesUrl = props.match.url;\n\n    useEffect(() => {\n            window.scrollTo(0, 0)\n            dispatch(getTV())\n    }, [])\n\n\n    const series = useSelector((state) => state.series)\n    return (\n        <div>\n            <NavBar/>\n            <div><div className=\"PopFilmText\"><h1>Popüler Diziler</h1></div>\n                   <div className=\"movieBody\">             \n            {\n                series?.results?.map((seri) => {\n                    return (\n                        \n                        <div className=\"movieCard\">\n                        <Link to={`/series/${seri?.id}`}>\n                        <div className=\"picAndProgres\">\n                        <div className=\"cardPic\"><img src={`https://www.themoviedb.org/t/p/w1280/${seri?.poster_path}`} height=\"100%\" width=\"100%\"/></div>\n                        <div className=\"cardProgress\">\n                        <CircularProgressbar\n                            value={seri?.vote_average}\n                            maxValue=\"10\"\n                            text={`${seri?.vote_average}%`}\n                            background\n                            backgroundPadding={6}\n                            styles={buildStyles({\n                                textSize:\"25\",\n                                backgroundColor: \"#081c22\",\n                                textColor: \"#fff\",\n                                pathColor: \"#21d07a\",\n                                trailColor: \"transparent\"\n                            })}\n                        />\n                        </div>\n                        </div>\n                        <div className=\"cardInText\">\n                            <h3>{seri?.original_name}</h3>\n                            <p>{seri?.first_air_date}</p>\n                        </div>\n                        </Link>\n                    </div>\n                    )\n                })\n            }\n        </div>\n        </div>\n        <Grid\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n               <Pagenation passedUrl={passedSeriesUrl}/> \n            </Grid>\n        \n\n        </div>\n\n    )\n}\n\nexport default Series;","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/SearchPage.js",["126"],"import React, { useEffect } from 'react';\nimport SearchInput from './SearchInput'\nimport SearchInLeftComp from './SearchInLeftComp';\nimport '../css/NavBar.css'\nimport NavBar from './NavBar';\n\nconst SearchPage = (props) => {\n    const queryData = props.location.search.substr(1,50)\n\n    return(\n        <div>\n            <NavBar/>\n            <div className=\"denemeCss\">\n            <SearchInput/>\n            </div>\n            <div className=\"SearchPageBody\">\n                <SearchInLeftComp queryData={queryData}/>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchPage;","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/SearchInLeftComp.js",["127","128","129","130","131","132","133","134"],"import { Box, Tabs, Tab, Typography, makeStyles } from '@material-ui/core';\nimport '../css/NavBar.css';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSearchMovie, getSearchPeople, getSearchTV } from '../actions';\nimport { Link } from 'react-router-dom';\nimport SearchInput from './SearchInput'\n\nconst SearchInLeftComp = ({ queryData }) => {\n\n    function TabPanel(props) {\n        const { children, value, index, ...other } = props;\n\n        //console.log(props)\n        return (\n            <div\n                role=\"tabpanel\"\n                hidden={value !== index}\n                id={`vertical-tabpanel-${index}`}\n                aria-labelledby={`vertical-tab-${index}`}\n                {...other}\n            >\n                {value === index && (\n                    <Box p={3}>\n                        <Typography>{children}</Typography>\n                    </Box>\n                )}\n            </div>\n        );\n    }\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            flexGrow: 1,\n            backgroundColor: theme.palette.background.paper,\n            display: 'flex',\n            height: 224,\n            width: \"20%\"\n        },\n        tabs: {\n            borderRight: `1px solid ${theme.palette.divider}`,\n        },\n        tabMar: {\n            marginTop: -25\n        },\n\n    }));\n\n    const classes = useStyles();\n    const [searchSelectedTab, setsearchSelectedTab] = useState(0)\n\n    const dispatch = useDispatch()\n\n    const { filterMovies, filterSeries, filterPeople } = useSelector((state) => state)\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        dispatch(getSearchMovie(queryData))\n        dispatch(getSearchTV(queryData))\n        dispatch(getSearchPeople(queryData))\n    }, [queryData])\n\n\n    const handleChange = (event, newValue) => {\n        setsearchSelectedTab(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Tabs\n                className={classes.vertical}\n                orientation=\"vertical\"\n                variant=\"scrollable\"\n                value={searchSelectedTab}\n                onChange={handleChange}\n                aria-label=\"Vertical tabs example\"\n            >\n                <Tab label=\"Filmler\" />\n                <Tab label=\"Diziler\" />\n                <Tab label=\"Kişiler\" />\n            </Tabs>\n            <TabPanel className={classes.tabMar} value={searchSelectedTab} index={0}>\n                <div className=\"searchMovieAllBody\">\n                    {\n                        filterMovies?.results?.length === 0 ? <p>Aradığınız sonuç bulunamadı..</p> : \n                        filterMovies?.results?.map((filter) => {\n                            return (\n                                <Link to={`/movie/${filter.id}`} style={{textDecoration:\"none\", color:\"black\"}}>\n                                <div className=\"searchMovieBody\" key={filter?.id}>\n                                    <div className=\"searchMoviePicture\">{filter.poster_path === null ? <img src=\"https://st3.depositphotos.com/23594922/31822/v/600/depositphotos_318221368-stock-illustration-missing-picture-page-for-website.jpg\" height=\"100%\" width=\"100%\"/> : \n                                    <img src={`https://www.themoviedb.org/t/p/w1280/${filter?.poster_path}`} height=\"100%\" width=\"100%\" />}</div>\n                                    <div className=\"searchMovieText\">\n                                        <h3>{filter?.title}</h3>\n                                        <p>{filter?.release_date}</p>\n                                        <span>{filter?.overview?.substr(0,199)}</span>\n                                    </div>\n                                </div>\n                                </Link>\n                            )\n                        })\n                    }\n                </div>\n            </TabPanel>\n            <TabPanel className={classes.tabMar} value={searchSelectedTab} index={1}>\n                <div className=\"searchMovieAllBody\">\n                    {\n                        filterSeries?.results?.length === 0 ? <p>Aradığınız sonuç bulunamadı..</p> :\n                        filterSeries?.results?.map((filter) => {\n                            return (\n                                <Link to={`/series/${filter.id}`} style={{textDecoration:\"none\", color:\"black\"}}>\n\n                                <div className=\"searchMovieBody\" key={filter?.id}>\n                                    <div className=\"searchMoviePicture\">{filter.poster_path === null ? <img src=\"https://st3.depositphotos.com/23594922/31822/v/600/depositphotos_318221368-stock-illustration-missing-picture-page-for-website.jpg\" height=\"100%\" width=\"100%\"/> : \n                                    <img src={`https://www.themoviedb.org/t/p/w1280/${filter?.poster_path}`} height=\"100%\" width=\"100%\" />}</div>\n                                    <div className=\"searchMovieText\">\n                                        <h3>{filter?.name}</h3>\n                                        <p>{filter?.first_air_date}</p>\n                                        <span>{filter?.overview?.substr(0,199)}</span>\n                                    </div>\n                                </div>\n                                </Link>\n\n                            )\n                        })\n                    }\n                </div>\n            </TabPanel>\n            <TabPanel className={classes.tabMar} value={searchSelectedTab} index={2}>\n                <div className=\"searchPersonAllBody\">\n                    {\n                        filterPeople?.results?.length === 0 ? <div style={{display: \"flex\", justifyContent:\"center\", alignItems:\"center\"}}><p>Aradığınız sonuç bulunamadı</p></div> : \n                        filterPeople?.results?.map((person) => {\n                            return (\n                                <Link to={`/person/${person.id}`} style={{textDecoration:\"none\", color:\"black\"}}>\n                                <div className=\"searchPersonBody\">\n                                    <div className=\"searchPersonPicture\">{person.profile_path === null ? <img src=\"https://st3.depositphotos.com/23594922/31822/v/600/depositphotos_318221368-stock-illustration-missing-picture-page-for-website.jpg\" height=\"100%\" width=\"100%\"/> : \n                                    <img src={`https://www.themoviedb.org/t/p/w1280/${person?.profile_path}`} height=\"100%\" width=\"100%\" />}</div>\n                                    <div className=\"searchPersonText\">\n                                        <h3>{person?.name}</h3>\n                                        <div style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}> \n                                        <span style={{marginRight: \"10px\"}}>{person.known_for_department}:</span>                                      \n                                        {   \n                                            person.known_for?.map((known) => {\n                                                return(\n                                                   <div><p style={{marginRight: \"10px\"}}>{known.title}</p></div>\n                                                )\n                                            })\n                                        }\n                                        </div>\n                                    </div>\n                                </div>\n                                </Link>\n                            )\n                        })\n                    }\n\n                </div>\n            </TabPanel>\n        </div>\n    )\n}\n\nexport default SearchInLeftComp;","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/InterMenu.js",["135"],"import react from 'react'\nimport '../css/NavBar.css';\n\nconst InterMenu = () => {\n    return(\n        <div className=\"InterMenuC\">\n            <ul>\n                <li>Özel</li>\n                <li>Medya</li>\n                <li>Hayranlar</li>\n                <li>Paylaş</li>\n            </ul>\n        </div>\n    )\n}\n\nexport default InterMenu;","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/PeopleList.js",["136","137"],"import { Link } from 'react-router-dom'\nimport '../css/NavBar.css';\nimport NavBar from './NavBar';\nimport Pagenation from './Pagenation';\nimport { Grid } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPeople } from '../actions';\n\nconst PeopleList = (props) => {\n    const dispatch = useDispatch();\n    const passedMovieUrl = props.match.url;\n\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        dispatch(getPeople())\n    }, [])\n\n    const people = useSelector((state) => state.people);\n    return (\n        <div>\n            <NavBar/>\n            <div><div className=\"PopFilmText\"><h1>Popüler Oyuncular</h1></div>\n            <div className=\"movieBody\">\n                {\n                    people?.results?.map((person) => {\n                        return (\n                            <div className=\"movieCard\">\n                                <Link to={`/person/${person.id}`}>\n                                    <div className=\"picAndProgres\">\n                                        <div className=\"cardPic\"><img src={`https://www.themoviedb.org/t/p/w1280/${person?.profile_path}`} height=\"100%\" width=\"100%\" /></div>\n                                    </div>\n                                    <div className=\"cardInText\">\n                                        <h3>{person?.name}</h3>\n                                    </div>\n                                </Link>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            </div>\n            <Grid\n                container\n                justify=\"center\"\n                alignItems=\"center\"\n            >\n                <Pagenation passedUrl={passedMovieUrl} />\n            </Grid>\n\n\n        </div>\n    )\n}\n\nexport default PeopleList;","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/InPerson.js",["138","139"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport InterMenu from './InterMenu'\nimport { singlePerson } from '../actions';\n\nimport '../css/NavBar.css';\n\nconst InPerson = () => {\n    const dispatch = useDispatch()\n\n    const params = useParams()\n\n    const personID = params.id\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        dispatch(singlePerson(personID))\n    },[])\n\n    const singlePeople = useSelector((state) => state.singlePeople)\n    return (\n        <div>\n            <NavBar/>\n            <InterMenu/>\n        <div className=\"inPersonAllBody\">\n            <div className=\"inPersonBody\">\n                <div className=\"picAndInfo\">\n                    <div className=\"personPicture\"><img src={`https://www.themoviedb.org/t/p/w1280${singlePeople?.profile_path}`} height=\"100%\" width=\"100%\"/></div>\n                    <div className=\"personInfo\">\n                        <div className=\"allInfo\">\n                            <h2>Kişisel Bilgi</h2>\n                            <div className=\"textStyle\">\n                                <h3>Bilinen işi</h3>\n                                <p>{singlePeople?.known_for_department}</p>\n                                <h3>Bilinen Filmleri</h3>\n                                <p>Oyunculuk</p>\n                                <h3>Cinsiyet</h3>\n                                <p>{singlePeople?.gender === 2 ? \"Erkek\" : \"Kadın\"}</p>\n                                <h3>Doğum Günü</h3>\n                                <p>{singlePeople?.birthday}</p>\n                                <h3>Doğum Yeri</h3>\n                                <p>{singlePeople?.place_of_birth}</p>\n                                <h3 style={{marginBottom:\"10px\"}}>Ayrıca Şöyle Bilinir</h3>\n                                <p>{singlePeople?.also_known_as.map((known) => {\n                                    return(\n                                        <p>{known}</p>\n                                    )\n                                })}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"personBiography\">\n                    <div className=\"inAllBiography\">\n                        <h2>{singlePeople?.name}</h2>\n                        <div className=\"inBiography\">\n                            <h3>Biyografi</h3>\n                            <p>{singlePeople?.biography.length === 0 ? \"Bu kişi hakkında biyografi bulunamadı\" : singlePeople?.biography}</p>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport default InPerson;",{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":14},{"ruleId":"144","severity":1,"message":"148","line":12,"column":8,"nodeType":"146","messageId":"147","endLine":12,"endColumn":14},{"ruleId":"144","severity":1,"message":"149","line":17,"column":20,"nodeType":"146","messageId":"147","endLine":17,"endColumn":29},{"ruleId":"144","severity":1,"message":"150","line":17,"column":31,"nodeType":"146","messageId":"147","endLine":17,"endColumn":43},{"ruleId":"144","severity":1,"message":"151","line":8,"column":18,"nodeType":"146","messageId":"147","endLine":8,"endColumn":23},{"ruleId":"152","severity":1,"message":"153","line":19,"column":8,"nodeType":"154","endLine":19,"endColumn":10,"suggestions":"155"},{"ruleId":"156","severity":1,"message":"157","line":35,"column":54,"nodeType":"158","endLine":35,"endColumn":154},{"ruleId":"144","severity":1,"message":"159","line":8,"column":8,"nodeType":"146","messageId":"147","endLine":8,"endColumn":16},{"ruleId":"144","severity":1,"message":"160","line":31,"column":12,"nodeType":"146","messageId":"147","endLine":31,"endColumn":18},{"ruleId":"144","severity":1,"message":"149","line":31,"column":20,"nodeType":"146","messageId":"147","endLine":31,"endColumn":29},{"ruleId":"156","severity":1,"message":"157","line":38,"column":28,"nodeType":"158","endLine":38,"endColumn":86},{"ruleId":"152","severity":1,"message":"161","line":39,"column":8,"nodeType":"154","endLine":39,"endColumn":10,"suggestions":"162"},{"ruleId":"156","severity":1,"message":"157","line":50,"column":49,"nodeType":"158","endLine":50,"endColumn":127},{"ruleId":"152","severity":1,"message":"163","line":37,"column":8,"nodeType":"154","endLine":37,"endColumn":10,"suggestions":"164"},{"ruleId":"156","severity":1,"message":"157","line":49,"column":49,"nodeType":"158","endLine":49,"endColumn":156},{"ruleId":"156","severity":1,"message":"157","line":11,"column":47,"nodeType":"158","endLine":11,"endColumn":133},{"ruleId":"144","severity":1,"message":"160","line":12,"column":12,"nodeType":"146","messageId":"147","endLine":12,"endColumn":18},{"ruleId":"144","severity":1,"message":"150","line":12,"column":31,"nodeType":"146","messageId":"147","endLine":12,"endColumn":43},{"ruleId":"152","severity":1,"message":"153","line":16,"column":7,"nodeType":"154","endLine":16,"endColumn":9,"suggestions":"165"},{"ruleId":"144","severity":1,"message":"166","line":25,"column":20,"nodeType":"146","messageId":"147","endLine":25,"endColumn":26},{"ruleId":"144","severity":1,"message":"167","line":25,"column":28,"nodeType":"146","messageId":"147","endLine":25,"endColumn":34},{"ruleId":"152","severity":1,"message":"153","line":64,"column":8,"nodeType":"154","endLine":64,"endColumn":10,"suggestions":"168"},{"ruleId":"156","severity":1,"message":"157","line":98,"column":70,"nodeType":"158","endLine":98,"endColumn":171},{"ruleId":"156","severity":1,"message":"157","line":137,"column":70,"nodeType":"158","endLine":137,"endColumn":171},{"ruleId":"144","severity":1,"message":"169","line":7,"column":10,"nodeType":"146","messageId":"147","endLine":7,"endColumn":16},{"ruleId":"152","severity":1,"message":"153","line":19,"column":8,"nodeType":"154","endLine":19,"endColumn":10,"suggestions":"170"},{"ruleId":"156","severity":1,"message":"157","line":35,"column":50,"nodeType":"158","endLine":35,"endColumn":149},{"ruleId":"144","severity":1,"message":"171","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"172","line":7,"column":8,"nodeType":"146","messageId":"147","endLine":7,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":61,"column":8,"nodeType":"154","endLine":61,"endColumn":19,"suggestions":"173"},{"ruleId":"156","severity":1,"message":"157","line":90,"column":104,"nodeType":"158","endLine":90,"endColumn":274},{"ruleId":"156","severity":1,"message":"157","line":91,"column":37,"nodeType":"158","endLine":91,"endColumn":139},{"ruleId":"156","severity":1,"message":"157","line":113,"column":104,"nodeType":"158","endLine":113,"endColumn":274},{"ruleId":"156","severity":1,"message":"157","line":114,"column":37,"nodeType":"158","endLine":114,"endColumn":139},{"ruleId":"156","severity":1,"message":"157","line":136,"column":106,"nodeType":"158","endLine":136,"endColumn":276},{"ruleId":"156","severity":1,"message":"157","line":137,"column":37,"nodeType":"158","endLine":137,"endColumn":140},{"ruleId":"144","severity":1,"message":"174","line":1,"column":8,"nodeType":"146","messageId":"147","endLine":1,"endColumn":13},{"ruleId":"152","severity":1,"message":"153","line":18,"column":8,"nodeType":"154","endLine":18,"endColumn":10,"suggestions":"175"},{"ruleId":"156","severity":1,"message":"157","line":32,"column":66,"nodeType":"158","endLine":32,"endColumn":169},{"ruleId":"152","severity":1,"message":"176","line":20,"column":7,"nodeType":"154","endLine":20,"endColumn":9,"suggestions":"177"},{"ruleId":"156","severity":1,"message":"157","line":30,"column":52,"nodeType":"158","endLine":30,"endColumn":159},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'Cookie' is defined but never used.","'setCookie' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","'getTV' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["180"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MenuIcon' is defined but never used.","'cookie' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'movieID'. Either include them or remove the dependency array.",["181"],"React Hook useEffect has missing dependencies: 'dispatch' and 'tvID'. Either include them or remove the dependency array.",["182"],["183"],"'series' is assigned a value but never used.","'people' is assigned a value but never used.",["184"],"'getAPI' is defined but never used.",["185"],"'useEffect' is defined but never used.","'SearchInput' is defined but never used.",["186"],"'react' is defined but never used.",["187"],"React Hook useEffect has missing dependencies: 'dispatch' and 'personID'. Either include them or remove the dependency array.",["188"],"no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"189","fix":"195"},{"desc":"189","fix":"196"},{"desc":"189","fix":"197"},{"desc":"198","fix":"199"},{"desc":"189","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [dispatch]",{"range":"203","text":"204"},"Update the dependencies array to be: [dispatch, movieID]",{"range":"205","text":"206"},"Update the dependencies array to be: [dispatch, tvID]",{"range":"207","text":"208"},{"range":"209","text":"204"},{"range":"210","text":"204"},{"range":"211","text":"204"},"Update the dependencies array to be: [dispatch, queryData]",{"range":"212","text":"213"},{"range":"214","text":"204"},"Update the dependencies array to be: [dispatch, personID]",{"range":"215","text":"216"},[659,661],"[dispatch]",[1151,1153],"[dispatch, movieID]",[1108,1110],"[dispatch, tvID]",[433,435],[1761,1763],[657,659],[1815,1826],"[dispatch, queryData]",[522,524],[508,510],"[dispatch, personID]"]