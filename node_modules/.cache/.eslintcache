[{"/home/bahadir/Masaüstü/Derslerim/trying-app/src/index.js":"1","/home/bahadir/Masaüstü/Derslerim/trying-app/src/App.js":"2","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/MovieList.js":"3","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/NavBar.js":"4","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/Home.js":"5","/home/bahadir/Masaüstü/Derslerim/trying-app/src/reducers/rootReducer.js":"6","/home/bahadir/Masaüstü/Derslerim/trying-app/src/actions/index.js":"7","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/InMovie.js":"8","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/TVseries.js":"9","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/LeadActor.js":"10","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/Login.js":"11","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/Pagenation.js":"12","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/SearchInput.js":"13","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/PopularTabs.js":"14","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/Series.js":"15","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/SearchPage.js":"16","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/SearchInLeftComp.js":"17","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/InterMenu.js":"18","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/PeopleList.js":"19","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/InPerson.js":"20","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/BottomNav.js":"21"},{"size":442,"mtime":1614291021231,"results":"22","hashOfConfig":"23"},{"size":1578,"mtime":1615597092265,"results":"24","hashOfConfig":"23"},{"size":3130,"mtime":1615598482142,"results":"25","hashOfConfig":"23"},{"size":2102,"mtime":1615490539701,"results":"26","hashOfConfig":"23"},{"size":956,"mtime":1615571631450,"results":"27","hashOfConfig":"23"},{"size":1914,"mtime":1615393295663,"results":"28","hashOfConfig":"23"},{"size":3070,"mtime":1615394864975,"results":"29","hashOfConfig":"23"},{"size":5481,"mtime":1615582501418,"results":"30","hashOfConfig":"23"},{"size":5397,"mtime":1615593894063,"results":"31","hashOfConfig":"23"},{"size":672,"mtime":1615397644089,"results":"32","hashOfConfig":"23"},{"size":3711,"mtime":1615506330681,"results":"33","hashOfConfig":"23"},{"size":868,"mtime":1615338891899,"results":"34","hashOfConfig":"23"},{"size":1846,"mtime":1615315820285,"results":"35","hashOfConfig":"23"},{"size":7059,"mtime":1615397554503,"results":"36","hashOfConfig":"23"},{"size":3034,"mtime":1615598499506,"results":"37","hashOfConfig":"23"},{"size":731,"mtime":1615584041067,"results":"38","hashOfConfig":"23"},{"size":8934,"mtime":1615595074838,"results":"39","hashOfConfig":"23"},{"size":344,"mtime":1615307777051,"results":"40","hashOfConfig":"23"},{"size":2167,"mtime":1615598437270,"results":"41","hashOfConfig":"23"},{"size":2924,"mtime":1615583436349,"results":"42","hashOfConfig":"23"},{"size":1509,"mtime":1615581883364,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1dy1vms",{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/home/bahadir/Masaüstü/Derslerim/trying-app/src/index.js",[],["96","97"],"/home/bahadir/Masaüstü/Derslerim/trying-app/src/App.js",["98","99","100","101"],"/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/MovieList.js",["102","103","104"],"/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/NavBar.js",["105","106","107","108"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useCookies } from 'react-cookie'\nimport { Link } from 'react-router-dom';\nimport img from '../img/logo.png'\nimport '../css/NavBar.css';\nimport { AccountCircle } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        position:\"static\",\n        backgroundColor:\"#032541\"\n    },\n    \n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n\n    \n  }));\n\nconst NavBar = () => {\n\n    const classes = useStyles();\n    const [cookie, setCookie, removeCookie] = useCookies()\n\n    return (\n        <div>\n        <AppBar className={classes.root}>\n          <Toolbar>\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n              <Link to=\"/\"><img src={img} style={{ height: \"30px\", width: \"70px\" }}/></Link>\n            </IconButton>\n            <Typography style={{ flexGrow: 1 }}>\n            <Button color=\"inherit\"><Link to=\"/Movielist\" style={{textDecoration:\"none\", color:\"white\"}}>Filmler</Link></Button>\n            <Button color=\"inherit\"><Link to=\"/Tvshow\" style={{textDecoration:\"none\", color:\"white\"}}>Diziler</Link></Button>\n            <Button color=\"inherit\"><Link to=\"/People\" style={{textDecoration:\"none\", color:\"white\"}}>Kişiler</Link></Button>\n            </Typography>\n            <Button color=\"inherit\"><Link style={{textDecoration:\"none\", color:\"white\"}}>Giriş</Link></Button>\n            <Button onClick={() => removeCookie('token')} color=\"inherit\"><Link style={{textDecoration:\"none\", color:\"white\"}}>Çıkış</Link></Button>\n            <IconButton>\n                <AccountCircle/>\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n      </div>\n    )\n}\n\nexport default NavBar;","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/Home.js",[],"/home/bahadir/Masaüstü/Derslerim/trying-app/src/reducers/rootReducer.js",[],"/home/bahadir/Masaüstü/Derslerim/trying-app/src/actions/index.js",[],"/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/InMovie.js",["109","110","111"],"import React, { useEffect } from 'react';\nimport { CircularProgressbar, buildStyles, } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AlarmIcon from '@material-ui/icons/Alarm';\nimport { isMobile } from 'react-device-detect';\nimport BottomNav from './BottomNav';\nimport NavBar from './NavBar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { singleMovie, leadActor } from '../actions';\nimport InterMenu from './InterMenu';\nimport '../css/NavBar.css';\nimport '../css/progress.css';\n\nimport LeadActor from './LeadActor';\n\n\nconst InMovie = (props) => {\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            marginLeft: \"30px\"\n        },\n        button: {\n            backgroundColor: \"#032541\",\n            marginRight: \"10px\",\n            color: \"#ffffff\"\n        }\n    }));\n\n    const movieID = props.match.params.id\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        dispatch(singleMovie(movieID))\n        dispatch(leadActor(movieID))\n    }, [])\n\n    const classes = useStyles();\n    const getSingle = useSelector((state) => state.singleMovie)\n    const getLeadActor = useSelector((state) => state.leadActor)\n    return (\n        <div>\n            { !isMobile && \n            <NavBar/>\n            }\n            <div className=\"mainInMovieBody\" style={{ backgroundImage: `url(https://www.themoviedb.org/t/p/w1280${getSingle?.backdrop_path})`, maxWidth:\"100%\", maxHeight:\"100%\"}}>\n                <div className=\"inMovieBody\">\n                    <div className=\"posterPath\"><img src={`https://www.themoviedb.org/t/p/w1280/${getSingle?.poster_path}`} /></div>\n                    <div className=\"movieDescription\">\n                        <div className=\"movieTitle\"><div className=\"titleAndDate\"><h2>{getSingle?.title}</h2><p>({getSingle?.release_date.substr(0, 4)})</p></div>\n                            <div className=\"dateAndGenres\">\n                                {getSingle?.genres.map((gen) => {\n                                    return (\n                                        <span style={{ marginRight: \"7px\" }} key={gen.id}>{gen.name},</span>\n                                    )\n                                })}\n\n\n                            </div>\n                        </div>\n                        <div className=\"movieScore\">\n                            <div className=\"moviePoint\"><CircularProgressbar\n                                value={getSingle?.vote_average}\n                                maxValue=\"10\"\n                                text={`${getSingle?.vote_average}%`}\n                                background\n                                backgroundPadding={6}\n                                styles={buildStyles({\n                                    backgroundColor: \"#081c22\",\n                                    textColor: \"#fff\",\n                                    pathColor: \"#21d07a\",\n                                    trailColor: \"transparent\"\n                                })}\n                            />\n                            </div>\n                            <p>Üye <br /> Puanları</p>\n                            <div className={classes.root}>\n                                <IconButton className={classes.button} color=\"primary\" aria-label=\"add an alarm\">\n                                    <AlarmIcon />\n                                </IconButton>\n                                <IconButton className={classes.button} color=\"primary\" aria-label=\"add an alarm\">\n                                    <AlarmIcon />\n                                </IconButton>\n                                <IconButton className={classes.button} color=\"primary\" aria-label=\"add an alarm\">\n                                    <DeleteIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className=\"movieSummary\">\n                            <h3>Özet</h3>\n                            <p>{getSingle?.overview}</p>\n                        </div>\n                        <div className=\"movieAuthors\">\n                            <div className=\"author\">\n                                <p>Chris Columbus</p>\n                                <p>Director</p>\n                            </div>\n                            <div className=\"author\">\n                                <p>Chris Columbus</p>\n                                <p>Director</p>\n                            </div>\n                            <div className=\"author\">\n                                <p>Chris Columbus</p>\n                                <p>Director</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                { isMobile && <BottomNav/> }\n            </div>\n            <div className=\"actorContainer\">\n                {\n                    getLeadActor?.map((actor) => {\n                        return (\n                            <LeadActor key={actor.id} name={actor.name} photo={actor.profile_path} role={actor.character} id={actor.id}/>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default InMovie;","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/TVseries.js",["112","113","114"],"/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/LeadActor.js",["115"],"import React from 'react';\nimport '../css/Reset.css'\nimport '../css/NavBar.css'\nimport { Link } from 'react-router-dom';\n\n\nconst LeadActor = ({name, photo, role, id}) => {\n    return(\n            <div className=\"actorBody\">\n                <Link to={`/person/${id}`} style={{textDecoration:\"none\", color:\"black\"}}>\n                <div className=\"actorPicture\"><img src={`https://www.themoviedb.org/t/p/w1280${photo}`} height=\"100%\" width=\"100%\"/></div>\n                <div className=\"actorBodyText\">\n                    <h2>{name}</h2>\n                    <p>{role}</p>\n                </div>\n                </Link>\n            </div>\n    )\n}\n\nexport default LeadActor;","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/Login.js",["116","117"],"import React, { useState } from 'react';\nimport { useCookies } from 'react-cookie'\nimport Logo from '../img/logo.png'\nimport Data from '../user.json'\nimport { Button, Grid, InputAdornment, TextField } from '@material-ui/core'\nimport { AccountCircle, LockRounded } from '@material-ui/icons';\nimport '../css/NavBar.css'\n\n\nconst Login = () => {\n\n    const [cookie, setCookie, removeCookie] = useCookies()\n\n    const [loginForm, setloginForm] = useState({\n        email: \"\",\n        password: \"\"\n    })\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        if (loginForm.email === Data.email && loginForm.password === Data.password) {\n            setCookie('token', 'ahadir')\n            setloginForm({\n                email: \"\",\n                password: \"\"\n            })\n        } else {\n            setloginForm({\n                email: \"\",\n                password: \"\"\n            })\n        }\n    }\n\n    return (\n        <Grid container style={{ minHeight: \"100vh\" }}>\n            <Grid item xs={12} sm={6}>\n                <img src=\"https://cdn.pixabay.com/photo/2018/07/06/19/48/charles-chaplin-3521070_960_720.jpg\" style={{ width: \"100%\", height: \"100%\", objectFit: \"cover\" }} alt=\"brand\" />\n            </Grid>\n            <Grid container xs={12}\n                sm={6}\n                alignItems=\"center\"\n                direction=\"column\"\n                justify=\"space-between\"\n                style={{ padding: 10 }}>\n                <div />\n                <div style={{ display: \"flex\", flexDirection: \"column\", maxWidth: 400, minWidth: 300 }}>\n                    <Grid container justify=\"center\">\n                        <img src={Logo} alt=\"logo\" width={150} />\n                    </Grid>\n                    <TextField\n                        label=\"Kullanıcı adı\"\n                        margin=\"normal\"\n                        onChange={(e) => setloginForm({ ...loginForm, email: e.target.value})}\n                        value={loginForm.email}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <AccountCircle />\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                    <TextField\n                        label=\"Şifre\"\n                        type=\"password\"\n                        margin=\"normal\"\n                        onChange={(e) => setloginForm({ ...loginForm, password: e.target.value}) }\n                        value={loginForm.password}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <LockRounded/>\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                    <div style={{ height: 20 }} />\n                    <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">\n                        Giriş yap\n                    </Button>\n                    <div style={{ height: 20 }} />\n                    <Button>Kayıt ol</Button>\n                </div>\n                <Grid container justify=\"center\" spacing={2}>\n                    <Grid item>\n                        <Button color=\"primary\">Ana Sayfaya dön</Button>\n                    </Grid>\n                    <Grid item>\n                        <Button variant=\"outlined\">Şifreni mi unuttun?</Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Login;","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/Pagenation.js",["118","119","120"],"import { Pagination } from '@material-ui/lab';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAPI, getPeople, getTV } from '../actions';\n\nconst Pagenation = (props) => {\n\n    const [page, setPage] = useState(1);\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getAPI())\n        dispatch(getTV())\n        dispatch(getPeople())\n    },[])\n\n    const handleChange = (event, value) => {\n        setPage(value);\n        dispatch(getAPI(value))\n        dispatch(getTV(value))\n        dispatch(getPeople(value))\n      };\n\n    const {movies, series, people} = useSelector((state) => state)\n\n    return (\n        <div>\n          <Pagination count={movies.total_pages} page={page} onChange={handleChange} color=\"secondary\" />  \n        </div>\n    )\n}\n\nexport default Pagenation;","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/SearchInput.js",[],"/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/PopularTabs.js",["121","122","123"],"import React, { useEffect, useState } from 'react';\nimport { Tabs, Tab, Box, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CircularProgressbar, buildStyles, } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport '../css/NavBar.css';\nimport '../css/progress.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAPI, getTV } from '../actions';\nimport { Link } from 'react-router-dom';\n\nconst PopularTabs = () => {\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            flexGrow: 1,\n            backgroundColor: theme.palette.background.paper,\n            marginTop: \"20px\",\n            marginLeft: \"20px\",\n\n        },\n\n        tab: {\n            marginBottom: \"20px\",\n        },\n\n        tabPanelCss: {\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        },\n\n    }));\n\n    const classes = useStyles();\n    const [selectedTab, setSelectedTab] = useState(0);\n\n    function TabPanel(props) {\n        const { children, value, index, ...other } = props;\n\n        return (\n            <div\n                role=\"tabpanel\"\n                hidden={value !== index}\n                id={`simple-tabpanel-${index}`}\n                aria-labelledby={`simple-tab-${index}`}\n                {...other}\n            >\n                {value === index && (\n                    <Box>\n                        <Typography>{children}</Typography>\n                    </Box>\n                )}\n            </div>\n        );\n    }\n\n    const dispatch = useDispatch()\n\n    const { movies, series } = useSelector((state) => state)\n\n\n    useEffect(() => {\n        dispatch(getAPI())\n        dispatch(getTV())\n    }, [])\n\n\n    const handleChange = (event, newValue) => {\n        setSelectedTab(newValue);\n        if (selectedTab === 0) {\n            dispatch(getAPI())\n        }\n        if (selectedTab === 1) {\n            dispatch(getTV())\n\n        }\n    };\n\n    return (\n        <div className={classes.root}>\n            <div className=\"tableBodyStyle\">\n                <p>Popüler Olanlar</p>\n                <div>\n                    <Tabs className={classes.tab} value={selectedTab} onChange={handleChange} >\n                        <Tab label=\"Televizyonda\" />\n                        <Tab label=\"Kiralık\" />\n                        <Tab label=\"Sinemalarda\" />\n                    </Tabs>\n                </div>\n            </div>\n            <TabPanel value={selectedTab} index={0}>\n                <div className=\"cardTabBody\">\n                    {\n                        movies?.results?.map((movie) => {\n                            return (\n                                <div className=\"tabBody\" key={movie?.id}>\n                                    <Link to={`/movie/${movie?.id}`} style={{textDecoration:\"none\", color:\"black\"}}>\n                                    <div className=\"pictureAndProgress\">\n                                        <div className=\"tabPictures\"><img src={`https://www.themoviedb.org/t/p/w1280/${movie?.poster_path}`} height=\"100%\" width=\"100%\" /></div>\n                                        <div className=\"progressRegion\">\n                                            <CircularProgressbar\n                                                value={movie?.vote_average}\n                                                maxValue=\"10\"\n                                                text={`${movie?.vote_average}`}\n                                                background\n                                                backgroundPadding={6}\n                                                styles={buildStyles({\n                                                    backgroundColor: \"#081c22\",\n                                                    textSize:\"27\",\n                                                    textColor: \"#fff\",\n                                                    pathColor: \"#21d07a\",\n                                                    trailColor: \"transparent\"\n                                                })}\n                                            />\n                                        </div>\n                                    </div>\n                                    </Link>\n                                    <div className=\"tabTextBody\">\n                                        <h3>{movie?.original_title}</h3>\n                                        <p>{movie?.release_date}</p>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n\n                </div>\n\n            </TabPanel>\n            <TabPanel value={selectedTab} index={1}>\n                <div className=\"cardTabBody\">\n                    {\n                        series?.results?.map((movie) => {\n                            return (\n                                <div className=\"tabBody\" key={movie?.id}>\n                                    <Link to={`/series/${movie.id}`}>\n                                    <div className=\"pictureAndProgress\">\n                                        <div className=\"tabPictures\"><img src={`https://www.themoviedb.org/t/p/w1280/${movie?.poster_path}`} height=\"100%\" width=\"100%\" /></div>\n                                        <div className=\"progressRegion\">\n                                            <CircularProgressbar\n                                                value={movie?.vote_average}\n                                                maxValue=\"10\"\n                                                text={`${movie?.vote_average}`}\n                                                background\n                                                backgroundPadding={6}\n                                                styles={buildStyles({\n                                                    backgroundColor: \"#081c22\",\n                                                    textSize:\"27\",\n                                                    textColor: \"#fff\",\n                                                    pathColor: \"#21d07a\",\n                                                    trailColor: \"transparent\"\n                                                })}\n                                            />\n                                        </div>\n                                    </div>\n                                    </Link>\n                                    <div className=\"tabTextBody\">\n                                        <h3>{movie?.original_name}</h3>\n                                        <p>{movie?.first_air_date}</p>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n\n                </div>\n            </TabPanel>\n            <TabPanel value={selectedTab} index={2}>\n                Item Three\n            </TabPanel>\n        </div>\n    )\n}\n\n\nexport default PopularTabs;","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/Series.js",["124","125","126"],"/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/SearchPage.js",["127"],"import React, { useEffect } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport SearchInput from './SearchInput'\nimport SearchInLeftComp from './SearchInLeftComp';\nimport '../css/NavBar.css'\nimport BottomNav from './BottomNav';\nimport NavBar from './NavBar';\n\nconst SearchPage = (props) => {\n    const queryData = props.location.search.substr(1,50)\n\n    return(\n        <div>\n            { !isMobile && <NavBar/> }\n            <div className=\"denemeCss\">\n            <SearchInput/>\n            </div>\n            <div className=\"SearchPageBody\">\n                <SearchInLeftComp queryData={queryData}/>\n            </div>\n            { isMobile && <BottomNav/> }\n        </div>\n    )\n}\n\nexport default SearchPage;","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/SearchInLeftComp.js",["128","129","130","131","132","133","134","135"],"/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/InterMenu.js",["136"],"import react from 'react'\nimport '../css/NavBar.css';\n\nconst InterMenu = () => {\n    return(\n        <div className=\"InterMenuC\">\n            <ul>\n                <li>Özel</li>\n                <li>Medya</li>\n                <li>Hayranlar</li>\n                <li>Paylaş</li>\n            </ul>\n        </div>\n    )\n}\n\nexport default InterMenu;","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/PeopleList.js",["137","138"],"/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/InPerson.js",["139","140","141"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport BottomNav from './BottomNav'\nimport { isMobile } from 'react-device-detect';\nimport InterMenu from './InterMenu'\nimport { singlePerson } from '../actions';\n\nimport '../css/NavBar.css';\n\nconst InPerson = () => {\n    const dispatch = useDispatch()\n\n    const params = useParams()\n\n    const personID = params.id\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        dispatch(singlePerson(personID))\n    },[])\n\n    const singlePeople = useSelector((state) => state.singlePeople)\n    return (\n        <div>\n            { !isMobile && <NavBar/> }\n        <div className=\"inPersonAllBody\">\n            <div className=\"inPersonBody\">\n                <div className=\"picAndInfo\">\n                    <div className=\"personPicture\"><img src={`https://www.themoviedb.org/t/p/w1280${singlePeople?.profile_path}`} height=\"100%\" width=\"100%\"/></div>\n                    <div className=\"personInfo\">\n                        <div className=\"allInfo\">\n                            <h2>Kişisel Bilgi</h2>\n                            <div className=\"textStyle\">\n                                <h3>Bilinen işi</h3>\n                                <p>{singlePeople?.known_for_department}</p>\n                                <h3>Bilinen Filmleri</h3>\n                                <p>Oyunculuk</p>\n                                <h3>Cinsiyet</h3>\n                                <p>{singlePeople?.gender === 2 ? \"Erkek\" : \"Kadın\"}</p>\n                                <h3>Doğum Günü</h3>\n                                <p>{singlePeople?.birthday}</p>\n                                <h3>Doğum Yeri</h3>\n                                <p>{singlePeople?.place_of_birth}</p>\n                                <h3 style={{marginBottom:\"10px\"}}>Ayrıca Şöyle Bilinir</h3>\n                                <p>{singlePeople?.also_known_as.map((known) => {\n                                    return(\n                                        <p>{known}</p>\n                                    )\n                                })}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"personBiography\">\n                    <div className=\"inAllBiography\">\n                        <h2>{singlePeople?.name}</h2>\n                        <div className=\"inBiography\">\n                            <h3>Biyografi</h3>\n                            <p>{singlePeople?.biography.length === 0 ? \"Bu kişi hakkında biyografi bulunamadı\" : singlePeople?.biography}</p>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n        { isMobile && <BottomNav/> }\n        </div>\n    )\n}\n\nexport default InPerson;","/home/bahadir/Masaüstü/Derslerim/trying-app/src/components/BottomNav.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":2,"column":9,"nodeType":"148","messageId":"149","endLine":2,"endColumn":17},{"ruleId":"146","severity":1,"message":"150","line":12,"column":8,"nodeType":"148","messageId":"149","endLine":12,"endColumn":14},{"ruleId":"146","severity":1,"message":"151","line":17,"column":20,"nodeType":"148","messageId":"149","endLine":17,"endColumn":29},{"ruleId":"146","severity":1,"message":"152","line":17,"column":31,"nodeType":"148","messageId":"149","endLine":17,"endColumn":43},{"ruleId":"146","severity":1,"message":"153","line":9,"column":18,"nodeType":"148","messageId":"149","endLine":9,"endColumn":23},{"ruleId":"154","severity":1,"message":"155","line":21,"column":8,"nodeType":"156","endLine":21,"endColumn":10,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":38,"column":54,"nodeType":"160","endLine":38,"endColumn":154},{"ruleId":"146","severity":1,"message":"161","line":8,"column":8,"nodeType":"148","messageId":"149","endLine":8,"endColumn":16},{"ruleId":"146","severity":1,"message":"162","line":31,"column":12,"nodeType":"148","messageId":"149","endLine":31,"endColumn":18},{"ruleId":"146","severity":1,"message":"151","line":31,"column":20,"nodeType":"148","messageId":"149","endLine":31,"endColumn":29},{"ruleId":"158","severity":1,"message":"159","line":38,"column":28,"nodeType":"160","endLine":38,"endColumn":86},{"ruleId":"146","severity":1,"message":"163","line":13,"column":8,"nodeType":"148","messageId":"149","endLine":13,"endColumn":17},{"ruleId":"154","severity":1,"message":"164","line":41,"column":8,"nodeType":"156","endLine":41,"endColumn":10,"suggestions":"165"},{"ruleId":"158","severity":1,"message":"159","line":53,"column":49,"nodeType":"160","endLine":53,"endColumn":127},{"ruleId":"146","severity":1,"message":"163","line":10,"column":8,"nodeType":"148","messageId":"149","endLine":10,"endColumn":17},{"ruleId":"154","severity":1,"message":"166","line":39,"column":8,"nodeType":"156","endLine":39,"endColumn":10,"suggestions":"167"},{"ruleId":"158","severity":1,"message":"159","line":50,"column":49,"nodeType":"160","endLine":50,"endColumn":156},{"ruleId":"158","severity":1,"message":"159","line":11,"column":47,"nodeType":"160","endLine":11,"endColumn":133},{"ruleId":"146","severity":1,"message":"162","line":12,"column":12,"nodeType":"148","messageId":"149","endLine":12,"endColumn":18},{"ruleId":"146","severity":1,"message":"152","line":12,"column":31,"nodeType":"148","messageId":"149","endLine":12,"endColumn":43},{"ruleId":"154","severity":1,"message":"155","line":16,"column":7,"nodeType":"156","endLine":16,"endColumn":9,"suggestions":"168"},{"ruleId":"146","severity":1,"message":"169","line":25,"column":20,"nodeType":"148","messageId":"149","endLine":25,"endColumn":26},{"ruleId":"146","severity":1,"message":"170","line":25,"column":28,"nodeType":"148","messageId":"149","endLine":25,"endColumn":34},{"ruleId":"154","severity":1,"message":"155","line":64,"column":8,"nodeType":"156","endLine":64,"endColumn":10,"suggestions":"171"},{"ruleId":"158","severity":1,"message":"159","line":98,"column":70,"nodeType":"160","endLine":98,"endColumn":171},{"ruleId":"158","severity":1,"message":"159","line":137,"column":70,"nodeType":"160","endLine":137,"endColumn":171},{"ruleId":"146","severity":1,"message":"172","line":8,"column":10,"nodeType":"148","messageId":"149","endLine":8,"endColumn":16},{"ruleId":"154","severity":1,"message":"155","line":21,"column":8,"nodeType":"156","endLine":21,"endColumn":10,"suggestions":"173"},{"ruleId":"158","severity":1,"message":"159","line":37,"column":50,"nodeType":"160","endLine":37,"endColumn":149},{"ruleId":"146","severity":1,"message":"174","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"146","severity":1,"message":"175","line":7,"column":8,"nodeType":"148","messageId":"149","endLine":7,"endColumn":19},{"ruleId":"154","severity":1,"message":"155","line":69,"column":8,"nodeType":"156","endLine":69,"endColumn":19,"suggestions":"176"},{"ruleId":"158","severity":1,"message":"159","line":117,"column":112,"nodeType":"160","endLine":117,"endColumn":283},{"ruleId":"158","severity":1,"message":"159","line":118,"column":49,"nodeType":"160","endLine":118,"endColumn":151},{"ruleId":"158","severity":1,"message":"159","line":140,"column":112,"nodeType":"160","endLine":140,"endColumn":283},{"ruleId":"158","severity":1,"message":"159","line":141,"column":49,"nodeType":"160","endLine":141,"endColumn":151},{"ruleId":"158","severity":1,"message":"159","line":163,"column":114,"nodeType":"160","endLine":163,"endColumn":285},{"ruleId":"158","severity":1,"message":"159","line":164,"column":49,"nodeType":"160","endLine":164,"endColumn":152},{"ruleId":"146","severity":1,"message":"177","line":1,"column":8,"nodeType":"148","messageId":"149","endLine":1,"endColumn":13},{"ruleId":"154","severity":1,"message":"155","line":20,"column":8,"nodeType":"156","endLine":20,"endColumn":10,"suggestions":"178"},{"ruleId":"158","severity":1,"message":"159","line":35,"column":66,"nodeType":"160","endLine":35,"endColumn":169},{"ruleId":"146","severity":1,"message":"163","line":7,"column":8,"nodeType":"148","messageId":"149","endLine":7,"endColumn":17},{"ruleId":"154","severity":1,"message":"179","line":22,"column":7,"nodeType":"156","endLine":22,"endColumn":9,"suggestions":"180"},{"ruleId":"158","severity":1,"message":"159","line":31,"column":52,"nodeType":"160","endLine":31,"endColumn":159},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"no-unused-vars","'isMobile' is defined but never used.","Identifier","unusedVar","'Cookie' is defined but never used.","'setCookie' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","'getTV' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["183"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MenuIcon' is defined but never used.","'cookie' is assigned a value but never used.","'InterMenu' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'movieID'. Either include them or remove the dependency array.",["184"],"React Hook useEffect has missing dependencies: 'dispatch' and 'tvID'. Either include them or remove the dependency array.",["185"],["186"],"'series' is assigned a value but never used.","'people' is assigned a value but never used.",["187"],"'getAPI' is defined but never used.",["188"],"'useEffect' is defined but never used.","'SearchInput' is defined but never used.",["189"],"'react' is defined but never used.",["190"],"React Hook useEffect has missing dependencies: 'dispatch' and 'personID'. Either include them or remove the dependency array.",["191"],"no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"192","fix":"198"},{"desc":"192","fix":"199"},{"desc":"192","fix":"200"},{"desc":"201","fix":"202"},{"desc":"192","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [dispatch]",{"range":"206","text":"207"},"Update the dependencies array to be: [dispatch, movieID]",{"range":"208","text":"209"},"Update the dependencies array to be: [dispatch, tvID]",{"range":"210","text":"211"},{"range":"212","text":"207"},{"range":"213","text":"207"},{"range":"214","text":"207"},"Update the dependencies array to be: [dispatch, queryData]",{"range":"215","text":"216"},{"range":"217","text":"207"},"Update the dependencies array to be: [dispatch, personID]",{"range":"218","text":"219"},[744,746],"[dispatch]",[1236,1238],"[dispatch, movieID]",[1193,1195],"[dispatch, tvID]",[433,435],[1761,1763],[742,744],[2058,2069],"[dispatch, queryData]",[607,609],[592,594],"[dispatch, personID]"]